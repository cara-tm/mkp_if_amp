h1. mkp_if_amp

This conditional tag examines the url of the current page and determines if the url ends in 'amp.' This allows for a custom page to be rendered using the standards for Google's Accelerated Mobile Pages Project.

h2. Links

* "Github Code Repository":https://github.com/michaelkpate/mkp_if_amp
* "Download":https://raw.githubusercontent.com/michaelkpate/mkp_if_amp/master/mkp_if_amp.txt
* "Demo Site":http://ampdemo.cmsstyles.com/

h2. mkp_if_amp

h3. Attributes

h4. None

h3. Examples

You will want some code similar to this in your individual article template header so that the amp page can be properly detected.

bc. <txp:if_individual_article>
 <link rel="canonical" href="<txp:permlink />">
 <link rel="amphtml" href="<txp:permlink />/amp/">
</txp:if_individual_article>

You will want something similar to this in your individual article template to display the alternative formatting.

bc. <txp:mkp_if_amp>
 <txp:output_form form="layout_archives_amp" />
<txp:else />
 <txp:output_form form="layout_archives_standard" />
</txp:mkp_if_amp>

h3. TXP variable usage

A @<txp:variable name="mkp_amp" />@ with true/false value ("1" _or_ "0") is available to play with categories, page links:

bc. <txp:if_variable name="mkp_amp" value="1">
      ... Do some AMP things ...
      <a href="<txp:site_url />categorie/<txp:category name='<txp:category1 />' />?amp">AMP Category 1 Link</a>
    <txp:else />
      ... Do some normal things...
   </txp:if_variable>

This variable sniffs for a simple @?amp@ query in URLs without returning a 404 page.

Note: you can easily initiate the amp variable for a further usage throughout your entire website by simply stating the mkp_if_amp tag:

bc. <txp:mkp_if_amp />

Then, call the amp variable within your website according to your needs:

bc. <txp:if_variable name="mkp_amp" value="1">
AMP context
<txp:else />
Normal context
</txp:if_variable>

h2. mkp_amp_redirect

A simple tag for web redirection to a subdomain name. Must be used with a mobiles detection script (i.e. adi_mobile plugin). <br>Some Web Designers could choose to use a subdomain for their mobiles websites (may be not recommanded. But the official AMP Blog is located into a subdomain, see: "https://amphtml.wordpress.com":https://amphtml.wordpress.com). In this case, the Textpattern multi-sites capacities makes things easier.
Note: Don't work on local server installation but only on real live servers.

h3. Usage

bc. <txp:mkp_amp_redirect url="" subdomain="" permlink="" />

*Good advice*: 
Copy the @config.php@ file of the main site into the subdomain configuration folder. So, all articles written by the Copy editors will be sent automatically to the 'AMP powered website' from the usual Textpattern administration interface. Designers have a separate and cleaner space to built their AMP pages.

h3. Attributes

* @url@ _string_ (optional): The location (URL) of the website. Default: @hu@ (website URL in the prefs panel).
* @subdomain@ _string_ (optional): Sets the subdomain name where to redirect to. Default: @amp@.
* @permlink@ _boolean_ (optional): for v 3.2. Choose to redirect the same individual article's title URL within the subdomain. Default: @0@ (false). 

h3. Example

bc. <txp:mkp_amp_redirect subdomain="my" permlink="1" />

In this case, If your main domain is <code>example.com</code>, it redirects to the @my.example.com@ subdomain and use the same individual article's URL from the main domain.

h3. Release History

Version 1.0: March 24th, 2016
Version 2.0: April 5th, 2016. Strongest support for different systems with in build GLOBAL variable. Adding a TXP variable who sniffs for a @?amp@ query in URLs.
Version 3.0: April 6th, 2016. Adding a new TXP tag for subdomain redirection.
Version 3.1: April 30th, 2016. Better context recognition and better variable creation. Variable name changed to "mkp_amp".
Version 3.2: May  , 2016. Support for same individual article's URL within the subdomain.
